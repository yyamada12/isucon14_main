const u="/api";async function o({url:t,method:e,body:a,headers:n,pathParams:i,queryParams:d,signal:l}){var p;try{const s={"Content-Type":"application/json",...n};s["Content-Type"].toLowerCase().includes("multipart/form-data")&&delete s["Content-Type"];const r=await window.fetch(`${u}${f(t,d,i)}`,{signal:l,method:e.toUpperCase(),body:a?a instanceof FormData?a:JSON.stringify(a):void 0,headers:s});if(!r.ok){let c;try{c=await r.json()}catch(h){c={status:"unknown",payload:h instanceof Error?`Unexpected error (${h.message})`:"Unexpected error"}}throw c}return r.status===204?void 0:(p=r.headers.get("content-type"))!=null&&p.includes("json")?await r.json():await r.blob()}catch(s){throw{name:"unknown",message:s instanceof Error?`Network error (${s.message})`:"Network error",stack:s}}}const f=(t,e={},a={})=>{let n=new URLSearchParams(e).toString();return n&&(n=`?${n}`),t.replace(/\{\w*\}/g,i=>a[i.slice(1,-1)])+n},m=(t,e)=>o({url:"/app/users",method:"post",...t,signal:e}),w=(t,e)=>o({url:"/app/payment-methods",method:"post",...t,signal:e}),g=(t,e)=>o({url:"/app/rides",method:"get",...t,signal:e}),y=(t,e)=>o({url:"/app/rides",method:"post",...t,signal:e}),C=(t,e)=>o({url:"/app/rides/estimated-fare",method:"post",...t,signal:e}),P=(t,e)=>o({url:"/app/rides/{rideId}/evaluation",method:"post",...t,signal:e}),A=(t,e)=>o({url:"/app/notification",method:"get",...t,signal:e}),j=(t,e)=>o({url:"/app/nearby-chairs",method:"get",...t,signal:e}),k=(t,e)=>o({url:"/owner/owners",method:"post",...t,signal:e}),v=(t,e)=>o({url:"/owner/sales",method:"get",...t,signal:e}),O=(t,e)=>o({url:"/owner/chairs",method:"get",...t,signal:e}),U=(t,e)=>o({url:"/chair/activity",method:"post",...t,signal:e}),b=(t,e)=>o({url:"/chair/coordinate",method:"post",...t,signal:e}),G=(t,e)=>o({url:"/chair/notification",method:"get",...t,signal:e}),N=(t,e)=>o({url:"/chair/rides/{rideId}/status",method:"post",...t,signal:e});export{m as a,b,N as c,U as d,k as e,w as f,g,P as h,C as i,y as j,j as k,G as l,A as m,O as n,v as o};
